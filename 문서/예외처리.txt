Gameplaylib.py============================================
@@@@@@@@ CardCheck 만바꾸기!!
def CardCheck(player,card1, card2, card3):  #에러코드 0:문제없음 1: 숫자입력 안함. 2: 카드범위를 초과함. 3: 카드가같음  4: 엠피 오바하는 카드씀.
    
    ErrorCode = 0
    if( (card1.isdigit()) and (card2.isdigit()) and (card3.isdigit()) ):
        card1 = int(card1)
        card2 = int(card2)
        card3 = int(card3)
        if( (card1 > 0 and card1 < 11) and (card2 > 0 and card2 < 11) and (card3 > 0 and card3 < 11) ):
            if( (card1 != card2) and (card2 != card3) and (card3 != card1) ):
                if( player['MP'] < (getskillmana(player,card1) + getskillmana(player,card2) + getskillmana(player,card3)) ):
                    return ErrorCode + 4
                else:
                    return ErrorCode + 4 
            else:
                return ErrorCode + 3
        else:
            return ErrorCode + 2
    else:
        return ErrorCode + 1


SelectCard_ xxxx.html==========================================
@@@@@@@@@@@@<head> <style> 사이에 추가! (캐릭터별로)
<script type= "text/javascript">

   if ({{ErrorCode}} == 1)
   {
         alert("숫자만 입력해주세요 ^_^ ");
   }
   else if ({{ErrorCode}} == 2)
   {
         alert("카드에 적힌 숫자만 입력해주세요 ! ^_^ ");
   }
   else if ({{ErrorCode}} == 3)
   {
         alert("각각 다른 카드를 입력해주세요 ! ^_^ ");
   }
   else if ({{ErrorCode}} == 4)
   {
         alert("Mp소모량이 초과 되었습니다 다른 카드를 입력해주세요 ! ^_^ ");
   }
   else
   {
         ;
   } 
</script>

views.py===================================================

<@@@@@@@def goto_SelectCard_Izreal ~ def Loop_play 전까지 !! >>

def goto_SelectCard_Izreal(request) :
   myloc = int(request.POST['locnum'])                        #플레이어의 데이터를 받아온다.
   Izreal_Setting(Client.Data[myloc])
   Client.Data[myloc]['Readcard'] == 0
   Error = 0
   data = { 'locnum' : myloc , 'ErrorCode' : Error }
   return render(request, 'Screen/SelectCard_Izreal.html', data)

def goto_SelectCard_Xvii(request) :
   myloc = int(request.POST['locnum'])                        #플레이어의 데이터를 받아온다.
   Xvii_Setting(Client.Data[myloc])
   Client.Data[myloc]['Readcard'] == 0
   Error = 0
   data = { 'locnum' : myloc , 'ErrorCode' : Error }
   return render(request, 'Screen/SelectCard_Xvii.html', data)

def goto_SelectCard_Piz(request) :
   myloc = int(request.POST['locnum'])                        #플레이어의 데이터를 받아온다.
   Piz_Setting(Client.Data[myloc])
   Client.Data[myloc]['Readcard'] == 0
   Error = 0
   data = { 'locnum' : myloc , 'ErrorCode' : Error }
   return render(request, 'Screen/SelectCard_Piz.html', data)

def goto_PlayScreen(request, locnum) :                  #카드 선택 후 올바른 카드 선택 했는지 확인 하고 플레이 셋팅 

   myloc = int(locnum)
   enemyloc = Client.Data[myloc]['enemyloc']

   if (Client.Data[myloc]['Readcard'] == 0) :

      First = request.POST['firstcard']               #선택한 첫번째 카드를 가져온다.
      Second = request.POST['secondcard']               #선택한 두번째 카드를 가져온다.
      Third = request.POST['thirdcard']               #선택한 두번째 카드를 가져온다.

      Error = CardCheck(Client.Data[myloc],First, Second, Third)
      if (Error == 0) :            
            CardSelect = [First, Second, Third]
      else:
         data = {'locnum' : myloc , 'ErrorCode' : Error }
         if (Client.Data[myloc]['character'] == 1) :
            return render(request, 'Screen/SelectCard_Izreal.html', data)
         elif(Client.Data[myloc]['character'] == 2) :
            return render(request, 'Screen/SelectCard_Xvii.html', data)
         else:
            return render(request, 'Screen/SelectCard_Piz.html', data)

      Client.Data[myloc]['stack'] =0
      Client.Data[myloc]['CardSelect'] = CardSelect
      Client.Data[myloc]['Readcard'] = 1


      data = {'data' : Setimage(myloc), 'myloc' : myloc} 
                              #Setimage 함수로 두 플레이어가 모두 카드 셋팅 후 이미지 셋팅 하는 것을 기다린다.
      return render(request, 'Screen/PlayScreen.html', data)   #상대의 카드를 확인하고 처음 자기 위치를 보여준다.